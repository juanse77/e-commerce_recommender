name: Develop actions
on:
  push:
    branches:
      - "main"
jobs:
  testing:
    runs-on: ubuntu-latest
    environment: Docker_hub
    steps:
      - name: Checking of ref
        if: ${{ github.action_ref }} == null
        run: echo "not ref"
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install Poetry
        uses: snok/install-poetry@v1
      - name: Install dependencies
        run: poetry install
      - name: Testing
        run: poetry run pytest --junitxml=jest-junit.xml --cov=e_commerce --cov-report=lcov --cov-report=xml
      - name: Test Report
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Test
          path: jest-junit.xml
          reporter: java-junit
      - name: Coverage Report
        if: success()
        uses: devmasx/coverage-check-action@v1.2.0
        with:
          type: lcov
          result_path: coverage.lcov
          min_coverage: 70
          token: ${{ github.token }}
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            data:
              - 'data/recommendations.pkl'
      - name: Set up QEMU # If 'data/recommendations.pkl' changes docker image will be built and pushed
        if: steps.changes.outputs.data == 'true'
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        if: steps.changes.outputs.data == 'true'
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        if: steps.changes.outputs.data == 'true'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set the value
        if: steps.changes.outputs.data == 'true'
        run: |
          echo "VERSION=$(poetry version -s)" >> $GITHUB_ENV
      - name: Build and push
        if: steps.changes.outputs.data == 'true'
        uses: docker/build-push-action@v3
        with:
          build-args: |
            version=${{ env.VERSION }}
          context: .
          file: ${{ github.workspace }}/docker/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/e-commerce_recommender:latest
